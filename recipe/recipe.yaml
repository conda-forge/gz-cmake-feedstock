context:
  version: "4.2.0"
  major_version: "4"
  repo_name: "gz-cmake"
  name: "gz-cmake4"
  cxx_name: "libgz-cmake4"

recipe:
  name: ${{ name }}
  version: ${{ version }}

source:
  - url: "https://github.com/gazebosim/${{ repo_name }}/archive/${{ repo_name }}${{ major_version }}_${{ version }}.tar.gz"
    sha256: "62deb00527ea91a5467cfb352189d10303e6508b8d5e52cd6f999bf5a8166cc4"

build:
  number: 1

outputs:
  - package:
      name: ${{ cxx_name }}
    build:
      script:
        - if: unix
          then: build_cxx.sh
        - if: win
          then: bld_cxx.bat
    requirements:
      build:
        - ${{ compiler('c') }}
        - ${{ stdlib('c') }}
        - ${{ compiler('cxx') }}
        - cmake
        - pkg-config
        - ninja
      host:
        - if: win
          then:
            - dlfcn-win32
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}

       # The dlfcn-win32 run_export is only needed on Windows.
      ignore_run_exports:
        from_package:
          - if: win
            then:
              - dlfcn-win32
    tests:
      - script:
          - if: not win
            then: test -f ${PREFIX}/share/cmake/${{ name }}/${{ name }}-config.cmake
            else: if not exist %PREFIX%\Library\share\cmake\${{ name }}\${{ name }}-config.cmake exit 1
  - package:
      name: ${{ name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then: test -f ${PREFIX}/share/cmake/${{ name }}/${{ name }}-config.cmake
            else: if not exist %PREFIX%\Library\share\cmake\${{ name }}\${{ name }}-config.cmake exit 1
  # versionless outputs, see https://github.com/conda-forge/gz-sim-feedstock/issues/102 for the rationale
  - package:
      name: libgz-cmake
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-cmake', upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then: test -f ${PREFIX}/share/cmake/${{ name }}/${{ name }}-config.cmake
            else: if not exist %PREFIX%\Library\share\cmake\${{ name }}\${{ name }}-config.cmake exit 1
  - package:
      name: gz-cmake
    requirements:
      run:
        - ${{ pin_subpackage(name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-cmake', upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then: test -f ${PREFIX}/share/cmake/${{ name }}/${{ name }}-config.cmake
            else: if not exist %PREFIX%\Library\share\cmake\${{ name }}\${{ name }}-config.cmake exit 1

about:
  homepage: https://github.com/gazebosim/gz-cmake
  repository: https://github.com/gazebosim/gz-cmake
  license: "Apache-2.0"
  license_file: "LICENSE"
  summary: "A set of CMake modules that are used by the C++-based Gazebo projects."

extra:
  feedstock-name: ${{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
    - j-rivero
